openapi: 3.0.1
info:
  title: (Car Controller)
  contact:
    name: Taas Ekpaye
    email: taasekpaye@outlook.fr
  version: '1.0'
paths:
  /api/Auth/signin:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignInModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignInModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/Auth/signup:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignupModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignupModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Auth/whoami:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
  /api/ControllCheck/makeControllCheck:
    post:
      tags:
        - ControllCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControllCheckRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ControllCheckRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ControllCheckRequest'
      responses:
        '200':
          description: Success
  /api/ControllCheck/getCheckUpListBySession:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: SessionId
          in: query
          schema:
            type: string
        - name: Region
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
  /api/ControllCheck/CarControllChecksBySession:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: CarId
          in: query
          schema:
            type: string
        - name: SessionId
          in: query
          schema:
            type: string
        - name: Year
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CarControllResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CarControllResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CarControllResponse'
  /api/ControllCheck/CarControlledSections:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: CarId
          in: query
          schema:
            type: string
        - name: SessionId
          in: query
          schema:
            type: string
        - name: Year
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
  /api/ControllCheck/createControllCheckUp:
    post:
      tags:
        - ControllCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckUpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckUpRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CheckUpRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CheckUpResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CheckUpResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CheckUpResponse'
  /WeatherForecast:
    get:
      tags:
        - WeatherForecast
      operationId: GetWeatherForecast
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    CarControllResponse:
      type: object
      properties:
        carName:
          type: string
          nullable: true
        sessionName:
          type: string
          nullable: true
        checkUps:
          type: array
          items:
            $ref: '#/components/schemas/ControllCheckUpResponse'
          nullable: true
      additionalProperties: false
    CheckUpRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        sessionId:
          type: string
          nullable: true
        availableState:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CheckUpResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        availableState:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ControllCheckRequest:
      type: object
      properties:
        checkId:
          type: string
          nullable: true
        checkState:
          type: string
          nullable: true
        carId:
          type: string
          nullable: true
      additionalProperties: false
    ControllCheckUpResponse:
      type: object
      properties:
        checkUpName:
          type: string
          nullable: true
        checkUpState:
          type: string
          nullable: true
        dateDone:
          type: string
          nullable: true
      additionalProperties: false
    ROLE:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    Session:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
      additionalProperties: false
    SignInModel:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    SignupModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/ROLE'
        password:
          type: string
          nullable: true
        sessionId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        sessionId:
          type: string
          nullable: true
        sessionName:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        temperatureC:
          type: integer
          format: int32
        temperatureF:
          type: integer
          format: int32
          readOnly: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Using the Authorization header with the Bearer scheme.
      scheme: bearer
security:
  - Bearer:
      - Bearer
