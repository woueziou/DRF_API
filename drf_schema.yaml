openapi: 3.0.1
info:
  title: (Car Controller)
  contact:
    name: Taas Ekpaye
    email: taasekpaye@outlook.fr
  version: '1.0'
paths:
  /api/Auth/signin:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignInModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignInModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/Auth/signup:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SignupModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SignupModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Auth/whoami:
    get:
      tags:
        - Auth
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
  /api/Auth/renewtoken:
    get:
      tags:
        - Auth
      parameters:
        - name: UserId
          in: query
          schema:
            type: string
        - name: RefreshToken
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/Car/searchCar:
    get:
      tags:
        - Car
      parameters:
        - name: ChassisNumber
          in: query
          schema:
            type: string
        - name: Immatricule
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Car'
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
            text/json:
              schema:
                $ref: '#/components/schemas/Car'
  /api/ControllCheck/MakeCheckup:
    post:
      tags:
        - ControllCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckUpRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCheckUpRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateCheckUpRequest'
      responses:
        '200':
          description: Success
  /api/ControllCheck/CreateOrGetControlByCarIdOnly:
    post:
      tags:
        - ControllCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateControlRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateControlRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateControlRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ControlState'
            application/json:
              schema:
                $ref: '#/components/schemas/ControlState'
            text/json:
              schema:
                $ref: '#/components/schemas/ControlState'
  /api/ControllCheck/GetControlSectionsSummary:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: CarId
          in: query
          schema:
            type: string
        - name: Year
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlSection'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlSection'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlSection'
  /api/ControllCheck/GetControlStateByIdAndYear:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: Id
          in: query
          schema:
            type: string
        - name: year
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ControlState'
            application/json:
              schema:
                $ref: '#/components/schemas/ControlState'
            text/json:
              schema:
                $ref: '#/components/schemas/ControlState'
  /api/ControllCheck/GetControlListByState:
    get:
      tags:
        - ControllCheck
      parameters:
        - name: request
          in: query
          schema:
            $ref: '#/components/schemas/EnumControlState'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
  /api/ControllCheck/ValidateOrCancelSection:
    put:
      tags:
        - ControllCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandleSection'
          text/json:
            schema:
              $ref: '#/components/schemas/HandleSection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/HandleSection'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlState'
  /api/Params/getSectionCheckCount:
    get:
      tags:
        - Params
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Params/getPreviousSection:
    get:
      tags:
        - Params
      parameters:
        - name: Name
          in: query
          schema:
            type: string
        - name: Id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ParamSectionResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ParamSectionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ParamSectionResponse'
  /api/Params/createSection:
    post:
      tags:
        - Params
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSection'
          text/json:
            schema:
              $ref: '#/components/schemas/NewSection'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewSection'
      responses:
        '200':
          description: Success
  /api/Params/getCheckListBySection:
    get:
      tags:
        - Params
      parameters:
        - name: sectionid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckUpResponse'
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          nullable: true
        refreshToken:
          type: string
          nullable: true
      additionalProperties: false
    Car:
      type: object
      properties:
        id:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        idVehicule:
          type: string
          nullable: true
        numChassis:
          type: string
          nullable: true
        nomUsager:
          type: string
          nullable: true
        prenomUsager:
          type: string
          nullable: true
        telephoneUsager:
          type: string
          nullable: true
        adresseUsager:
          type: string
          nullable: true
        genre:
          type: string
          nullable: true
        ptac:
          type: string
          nullable: true
        puissanceV:
          type: string
          nullable: true
        nombePlace:
          type: string
          nullable: true
        marqueEgin:
          type: string
          nullable: true
        typeEngin:
          type: string
          nullable: true
        assurance:
          type: string
          nullable: true
        numPoliceAssurance:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        dateExpirationVisite:
          type: string
          nullable: true
      additionalProperties: false
    CarResponse:
      type: object
      properties:
        idVehicule:
          type: string
          nullable: true
        numChassis:
          type: string
          nullable: true
        nomUsager:
          type: string
          nullable: true
        prenomUsager:
          type: string
          nullable: true
        telephoneUsager:
          type: string
          nullable: true
        adresseUsager:
          type: string
          nullable: true
        genre:
          type: string
          nullable: true
        ptac:
          type: string
          nullable: true
        puissanceV:
          type: string
          nullable: true
        nombePlace:
          type: string
          nullable: true
        marqueEgin:
          type: string
          nullable: true
        typeEngin:
          type: string
          nullable: true
        assurance:
          type: string
          nullable: true
        numPoliceAssurance:
          type: string
          nullable: true
        usage:
          type: string
          nullable: true
        dateExpirationVisite:
          type: string
          nullable: true
      additionalProperties: false
    CheckUpResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        availableState:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ControlSection:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isValidated:
          type: boolean
        checks:
          type: array
          items:
            $ref: '#/components/schemas/SectionCheckUps'
          nullable: true
      additionalProperties: false
    ControlState:
      type: object
      properties:
        id:
          type: string
          nullable: true
        car:
          $ref: '#/components/schemas/CarResponse'
        state:
          $ref: '#/components/schemas/EnumControlState'
        addedBy:
          type: string
          nullable: true
      additionalProperties: false
    CreateCheckUpRequest:
      type: object
      properties:
        controlId:
          type: string
          nullable: true
        sectionId:
          type: string
          nullable: true
        checkName:
          type: string
          nullable: true
        checkState:
          type: string
          nullable: true
      additionalProperties: false
    CreateControlRequest:
      type: object
      properties:
        carId:
          type: string
          nullable: true
        year:
          type: integer
          format: int32
      additionalProperties: false
    EnumControlState:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    HandleSection:
      type: object
      properties:
        sectionId:
          type: string
          nullable: true
        controlId:
          type: string
          nullable: true
        state:
          type: boolean
        year:
          type: integer
          format: int32
      additionalProperties: false
    NewSection:
      type: object
      properties:
        name:
          type: string
          nullable: true
        previousSectionId:
          type: string
          nullable: true
      additionalProperties: false
    ParamSectionResponse:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ROLE:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    SectionCheckUps:
      type: object
      properties:
        name:
          type: string
          nullable: true
        checkState:
          type: string
          nullable: true
      additionalProperties: false
    SignInModel:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    SignupModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/ROLE'
        password:
          type: string
          nullable: true
        sessionId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserInfo:
      type: object
      properties:
        id:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        sectionId:
          type: string
          nullable: true
        sectionName:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Using the Authorization header with the Bearer scheme.
      scheme: bearer
security:
  - Bearer:
      - Bearer
